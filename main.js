(()=>{"use strict";function e(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var t=function t(n,r){var o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),e(this,"enableValidation",(function(){o._form.addEventListener("submit",(function(e){e.preventDefault()})),o._setFormListeners(),o._toggleButtonState()})),e(this,"_setFormListeners",(function(){Array.from(o._form.querySelectorAll(".".concat(o._object.inputSelector))).forEach((function(e){e.addEventListener("input",(function(){o._formValidation(e),o._toggleButtonState()}))}))})),e(this,"_formValidation",(function(e){e.validity.valid?o._hideError(e):o._showError(e,e.validationMessage)})),e(this,"_toggleButtonState",(function(){var e=o._form.querySelector(".".concat(o._object.submitButtonSelector));o._form.checkValidity()?(e.removeAttribute("disabled"),e.classList.remove(o._object.inactiveButtonClass)):(e.classList.add(o._object.inactiveButtonClass),e.setAttribute("disabled",!0))})),e(this,"_showError",(function(e,t){var n=o._form.querySelector("#".concat(e.id,"-error"));n.textContent=t,n.classList.add(o._object.errorClass)})),e(this,"_hideError",(function(e){o._form.querySelector("#".concat(e.id,"-error")).classList.remove(o._object.errorClass)})),e(this,"checkValid",(function(){Array.from(o._form.querySelectorAll(".form__input")).forEach((function(e){o._hideError(e,o._object),o._toggleButtonState(o._object)}))})),this._object=n,this._selector=document.querySelector(r),this._form=this._selector.querySelector(this._object.formSelector)};function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._container=t}var t,r;return t=e,(r=[{key:"addItem",value:function(e){this._container.prepend(e)}}])&&n(t.prototype,r),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){"Escape"===e.key&&o.close()},(n="_handleEscClose")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popup=document.querySelector(t),this.open=this.open.bind(this),this.close=this.close.bind(this),this._closeButton=this._popup.querySelector(".popup__close-button")}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_show"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_show"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._closeButton.addEventListener("click",this.close),this._popup.addEventListener("click",(function(t){t.target.classList.contains("popup")&&e.close()}))}}])&&o(t.prototype,n),e}();function c(e){return(c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function u(e,t,n){return(u="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=f(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function s(e,t){return!t||"object"!==c(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function f(e){return(f=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var h=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=f(r);if(o){var n=f(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return s(this,e)});function c(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(t=i.call(this,e))._popupCardImage=t._popup.querySelector(".popup__image"),t._cardImageCaption=t._popup.querySelector(".popup__image-name"),t}return t=c,(n=[{key:"open",value:function(e,t){this._popupCardImage.setAttribute("src",t),this._popupCardImage.setAttribute("alt","Картинка в режиме просмотра"),this._cardImageCaption.textContent=e,u(f(c.prototype),"open",this).call(this)}}])&&a(t.prototype,n),c}(i);function _(e){return(_="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function p(e,t,n){return(p="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=b(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function m(e,t){return(m=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function y(e,t){return!t||"object"!==_(t)&&"function"!=typeof t?v(e):t}function v(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function b(e){return(b=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var k=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&m(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=b(r);if(o){var n=b(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return y(this,e)});function c(e,t){var n,r,o,a,u=e.submit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),a=function(e){"Enter"===e.key&&n._submit()},(o="_handleEnterDown")in(r=v(n=i.call(this,t)))?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a,n._submit=u,n._form=n._popup.querySelector(".form"),n._inputList=n._form.querySelectorAll(".form__input"),n}return t=c,(n=[{key:"setSubmit",value:function(e){this._submit=e}},{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"open",value:function(){p(b(c.prototype),"open",this).call(this),document.addEventListener("keydown",this._handleEnterDown)}},{key:"close",value:function(){p(b(c.prototype),"close",this).call(this),document.removeEventListener("keydown",this._handleEnterDown),this._form.reset()}},{key:"setEventListeners",value:function(){var e=this;p(b(c.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._submit(e._getInputValues())}))}}])&&d(t.prototype,n),c}(i);function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var S=function(){function e(t,n){var r,o,i=this,c=t.data,a=t.handleCardClick,u=t.handleLikeClick,l=t.handleDeleteIconClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o=function(){var e=i._getTemplate();return i._likes.forEach((function(t){t._id===i._userId&&e.querySelector(".element__like").classList.add("element__like_clicked")})),e.querySelector(".element").classList.add("element_id_".concat(i._cardId)),e.querySelector(".element__deleteButton").classList.add(i._userId===i._ownerId?"element__deleteButton_visible":"element__deleteButton_hidden"),e.querySelector(".element__like-counter").textContent=i._likes.length,e.querySelector(".element__heading").textContent=i._name,e.querySelector(".element__image").setAttribute("src",i._link),e.querySelector(".element__image").setAttribute("alt",i._name),i._setEventListeners(e),i._element=e.querySelector(".element"),e},(r="createCard")in this?Object.defineProperty(this,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):this[r]=o,this._name=c.cardData.name,this._link=c.cardData.link,this._cardId=c.cardData._id,this._userId=c.currentUserId,this._ownerId=c.cardData.owner._id,this._likes=c.cardData.likes,this._cardSelector=n,this._getTemplate=this._getTemplate.bind(this),this._handleCardClick=a,this._handleLikeClick=u,this._handleDeleteIconClick=l}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.cloneNode(!0)}},{key:"getId",value:function(){return this._cardId}},{key:"removeCard",value:function(){this._element.remove()}},{key:"updateLikes",value:function(e){this._element.querySelector(".element__like-counter").textContent=e,this._element.querySelector(".element__like").classList.toggle("element__like_clicked")}},{key:"_setEventListeners",value:function(e){var t=this;e.querySelector(".element__deleteButton").addEventListener("click",(function(){t._handleDeleteIconClick()})),e.querySelector(".element__like").addEventListener("click",(function(e){t._handleLikeClick({element:e.target.closest(".element__like"),id:t._cardId})})),e.querySelector(".element__image").addEventListener("click",(function(){t._handleCardClick(t._name,t._link)}))}}])&&g(t.prototype,n),e}();function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var C=function(){function e(t,n,r){var o,i,c=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),i=function(e){var t=e.userName,n=e.about;c._profileName.textContent=t,c._profileSub.textContent=n},(o="setUserInfo")in this?Object.defineProperty(this,o,{value:i,enumerable:!0,configurable:!0,writable:!0}):this[o]=i,this._profileName=document.querySelector(t),this._profileSub=document.querySelector(n),this._profileAvatar=r,this.getUserInfo=this.getUserInfo.bind(this)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{user:this._profileName.textContent,about:this._profileSub.textContent}}},{key:"setAvatar",value:function(e){this._profileAvatar.style.backgroundImage="url(".concat(e,")")}}])&&w(t.prototype,n),e}();function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var L=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=t.url,this._headers=t.headers,this._checkResponse=this._checkResponse.bind(this)}var t,n;return t=e,(n=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject(res.status)}},{key:"getUserInfo",value:function(){var e=this;return fetch("".concat(this._url,"users/me"),{headers:this._headers}).then((function(t){return e._checkResponse(t)})).then((function(e){return e}))}},{key:"setUserInfo",value:function(e,t){var n=this;return fetch("".concat(this._url,"users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then((function(e){return n._checkResponse(e)}))}},{key:"getCards",value:function(){var e=this;return fetch("".concat(this._url,"cards"),{headers:this._headers}).then((function(t){return e._checkResponse(t)})).then((function(e){return e}))}},{key:"sendCard",value:function(e,t){var n=this;return fetch("".concat(this._url,"cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then((function(e){return n._checkResponse(e)})).then((function(e){return e}))}},{key:"deleteCard",value:function(e){var t=this;return fetch("".concat(this._url,"cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return t._checkResponse(e)})).then((function(e){return e}))}},{key:"setLike",value:function(e){var t=this;return fetch("".concat(this._url,"cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then((function(e){return t._checkResponse(e)})).then((function(e){return e}))}},{key:"removeLike",value:function(e){var t=this;return fetch("".concat(this._url,"cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return t._checkResponse(e)})).then((function(e){return e}))}},{key:"changerAvatar",value:function(e){var t=this;return fetch("".concat(this._url,"users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((function(e){return t._checkResponse(e)})).then((function(e){return e}))}}])&&E(t.prototype,n),e}(),O=".popup_name_edit",j=".popup_name_add",q=".popup_name_changeAvatar",I=document.querySelector(O).querySelector(".form__save-button"),P=document.querySelector(j).querySelector(".form__save-button"),R=document.querySelector(q).querySelector(".form__save-button"),A=document.querySelector(".profile__avatar"),T=document.querySelector(".profile__add-button"),B=document.querySelector(".profile__edit-button"),D=(document.querySelector("#form__input_info_cardName"),document.querySelector("#form__input_info_link"),document.querySelector(".form__input_info_name")),V=document.querySelector(".form__input_info_about"),x=document.querySelector(".elements"),U={formSelector:"form",inputSelector:"form__input",submitButtonSelector:"form__save-button",inactiveButtonClass:"form__save-button-disabled",inputErrorClass:"popup__error",errorClass:"form__error_show"};function N(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var J=null,F=new L({url:"https://mesto.nomoreparties.co/v1/cohort-26/",headers:{authorization:"6df61dab-da31-4f8e-8ce7-f211bdfa5ef2","Content-type":"application/json"}}),H=new C(".profile__name",".profile__subtitle",A);Promise.all([F.getUserInfo(),F.getCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],c=!0,a=!1;try{for(n=n.call(e);!(c=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);c=!0);}catch(e){a=!0,o=e}finally{try{c||null==n.return||n.return()}finally{if(a)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return N(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?N(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];J=o._id,H.setUserInfo({userName:o.name,about:o.about}),H.setAvatar(o.avatar),i.forEach((function(e){Z(Y(e))}))})).catch((function(e){return console.log("Ошибка при загрузке карт и информации =>".concat(e))}));var M=new t(U,O);M.enableValidation();var z=new t(U,j);z.enableValidation(),new t(U,q).enableValidation();var $=new h(".popup_name_image");$.setEventListeners();var G=new k({submit:function(e){var t=e.userName,n=e.about;ee(!0,I),F.setUserInfo(t,n).then((function(e){ee(!1,I),H.setUserInfo({userName:t,about:n}),G.close()})).catch((function(e){return console.log("Ошибка при редактировании =>".concat(e))}))}},O);G.setEventListeners();var K=new k({submit:function(e){var t=e.link;ee(!0,R),F.changerAvatar(t).then((function(e){ee(!1,R),H.setAvatar(e.avatar),K.close()})).catch((function(e){return console.log("Ошибка при смене аватара =>".concat(e))}))}},q);K.setEventListeners();var Q=new k({},".popup_name_delete-card");Q.setEventListeners();var W=new k({submit:function(e){var t=e.imgName,n=e.link;ee(!0,P),F.sendCard(t,n).then((function(e){ee(!1,P),Z(Y(e)),W.close()})).catch((function(e){return console.log("Ошибка при редактировании =>".concat(e))}))}},j);W.setEventListeners(),T.addEventListener("click",(function(){W.open(),z.checkValid()})),B.addEventListener("click",(function(){var e=H.getUserInfo();D.value=e.user,V.value=e.about,G.open(),M.checkValid()})),A.addEventListener("click",(function(){K.open(),M.checkValid()}));var X=new r(x);function Y(e){var t=new S({data:{cardData:e,currentUserId:J},handleCardClick:function(e,t){$.open(e,t)},handleDeleteIconClick:function(){Q.open(),Q.setSubmit((function(){F.deleteCard(t.getId()).then((function(){Q.close(),t.removeCard()})).catch((function(e){return console.log("Ошибка при удалении карточки =>".concat(e))}))}))},handleLikeClick:function(e){var n=e.element,r=e.id;n.classList.contains("element__like_clicked")?F.removeLike(r).then((function(e){return t.updateLikes(e.likes.length)})).catch((function(e){return console.log("Ошибка удалении лайка =>".concat(e))})):F.setLike(r).then((function(e){return t.updateLikes(e.likes.length)})).catch((function(e){return console.log("Ошибка установки лайка =>".concat(e))}))}},"#card");return t}function Z(e){var t=e.createCard();X.addItem(t)}function ee(e,t){t.textContent=e?"Сохранение...":"Cохранить"}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,